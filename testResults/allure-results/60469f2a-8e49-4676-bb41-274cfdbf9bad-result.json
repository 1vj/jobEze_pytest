{"name": "Verify Home link redirects to base URL", "status": "failed", "statusDetails": {"message": "Failed: Message: target frame detached\n  (failed to check if window was closed: disconnected: Unable to receive message from renderer)\n  (Session info: MicrosoftEdge=135.0.3179.66)\nStacktrace:\n\tGetHandleVerifier [0x00007FF76C1BEE95+16773]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C11F160+402688]\n\t(No symbol) [0x00007FF76BF0BAB0]\n\t(No symbol) [0x00007FF76BEFCABD]\n\t(No symbol) [0x00007FF76BEFBA3C]\n\t(No symbol) [0x00007FF76BF1A19A]\n\t(No symbol) [0x00007FF76BF7EB96]\n\t(No symbol) [0x00007FF76BF9605A]\n\t(No symbol) [0x00007FF76BF78C33]\n\t(No symbol) [0x00007FF76BF4D4D6]\n\t(No symbol) [0x00007FF76BF4CA82]\n\t(No symbol) [0x00007FF76BF4D303]\n\t(No symbol) [0x00007FF76C04060D]\n\t(No symbol) [0x00007FF76C04D642]\n\t(No symbol) [0x00007FF76C045673]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF76C299BDA+265882]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C12C5B1+457041]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C125864+429060]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C1259B3+429395]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C1174B6+370774]\n\tBaseThreadInitThunk [0x00007FFD888FE8D7+23]\n\tRtlUserThreadStart [0x00007FFD89B514FC+44]", "trace": "self = <webdriver.WebDriverHelperNew.WebDriverHelper object at 0x00000191D053DFD0>, condition = 'visible', locator = 'xpath', value = \"//a[text()='Home']\", wait_time = 30\n\n    def find_element(self, condition, locator, value, wait_time=30):\n        \"\"\"Finds an element based on the provided condition and locator.\"\"\"\n        wait = WebDriverWait(self.driver, wait_time)\n    \n        locator_map = {\n            'visible': EC.visibility_of_element_located,\n            'selected': EC.element_to_be_selected,\n            'clickable': EC.element_to_be_clickable,\n            'presence': EC.presence_of_element_located\n        }\n    \n        if condition not in locator_map:\n            raise ValueError(f\"Unknown condition: {condition}\")\n    \n        by = {\n            'xpath': By.XPATH,\n            'id': By.ID,\n            'css': By.CSS_SELECTOR,\n            'classname': By.CLASS_NAME,\n            'tagname': By.TAG_NAME,\n            'linktext': By.LINK_TEXT,\n            'partiallinktext': By.PARTIAL_LINK_TEXT,\n            'name': By.NAME\n        }\n    \n        if locator not in by:\n            raise ValueError(f\"Unknown locator: {locator}\")\n    \n        try:\n>           element = wait.until(locator_map[condition]((by[locator], value)))\n\nwebdriver\\WebDriverHelperNew.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000191D05C95E0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"target frame detached\",\"message\":\"target frame detached\\\\n  (failed to ch...1174B6+370774]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD888FE8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFD89B514FC+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: target frame detached\nE         (failed to check if window was closed: disconnected: Unable to receive message from renderer)\nE         (Session info: MicrosoftEdge=135.0.3179.66)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF76C1BEE95+16773]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C11F160+402688]\nE       \t(No symbol) [0x00007FF76BF0BAB0]\nE       \t(No symbol) [0x00007FF76BEFCABD]\nE       \t(No symbol) [0x00007FF76BEFBA3C]\nE       \t(No symbol) [0x00007FF76BF1A19A]\nE       \t(No symbol) [0x00007FF76BF7EB96]\nE       \t(No symbol) [0x00007FF76BF9605A]\nE       \t(No symbol) [0x00007FF76BF78C33]\nE       \t(No symbol) [0x00007FF76BF4D4D6]\nE       \t(No symbol) [0x00007FF76BF4CA82]\nE       \t(No symbol) [0x00007FF76BF4D303]\nE       \t(No symbol) [0x00007FF76C04060D]\nE       \t(No symbol) [0x00007FF76C04D642]\nE       \t(No symbol) [0x00007FF76C045673]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF76C299BDA+265882]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C12C5B1+457041]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C125864+429060]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C1259B3+429395]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C1174B6+370774]\nE       \tBaseThreadInitThunk [0x00007FFD888FE8D7+23]\nE       \tRtlUserThreadStart [0x00007FFD89B514FC+44]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_home_page.TestHomePage object at 0x00000191D053EF60>\n\n    @allure.title(\"Verify Home link redirects to base URL\")\n    @allure.tag(\"Smoke\")\n    def test_click_home_link(self):\n>       self.home_page.click_home_link()\n\ntestsuites\\jobeze\\test_home_page.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\JobezePGObject\\HomePage.py:13: in click_home_link\n    self.helper.click_element(\"//a[text()='Home']\", \"Clicking Home link\")\nwebdriver\\WebDriverHelperNew.py:152: in click_element\n    element = self.find_element('visible', 'xpath', element_xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <webdriver.WebDriverHelperNew.WebDriverHelper object at 0x00000191D053DFD0>, condition = 'visible', locator = 'xpath', value = \"//a[text()='Home']\", wait_time = 30\n\n    def find_element(self, condition, locator, value, wait_time=30):\n        \"\"\"Finds an element based on the provided condition and locator.\"\"\"\n        wait = WebDriverWait(self.driver, wait_time)\n    \n        locator_map = {\n            'visible': EC.visibility_of_element_located,\n            'selected': EC.element_to_be_selected,\n            'clickable': EC.element_to_be_clickable,\n            'presence': EC.presence_of_element_located\n        }\n    \n        if condition not in locator_map:\n            raise ValueError(f\"Unknown condition: {condition}\")\n    \n        by = {\n            'xpath': By.XPATH,\n            'id': By.ID,\n            'css': By.CSS_SELECTOR,\n            'classname': By.CLASS_NAME,\n            'tagname': By.TAG_NAME,\n            'linktext': By.LINK_TEXT,\n            'partiallinktext': By.PARTIAL_LINK_TEXT,\n            'name': By.NAME\n        }\n    \n        if locator not in by:\n            raise ValueError(f\"Unknown locator: {locator}\")\n    \n        try:\n            element = wait.until(locator_map[condition]((by[locator], value)))\n            return element\n        except Exception as e:\n>           pytest.fail(str(e))\nE           Failed: Message: target frame detached\nE             (failed to check if window was closed: disconnected: Unable to receive message from renderer)\nE             (Session info: MicrosoftEdge=135.0.3179.66)\nE           Stacktrace:\nE           \tGetHandleVerifier [0x00007FF76C1BEE95+16773]\nE           \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C11F160+402688]\nE           \t(No symbol) [0x00007FF76BF0BAB0]\nE           \t(No symbol) [0x00007FF76BEFCABD]\nE           \t(No symbol) [0x00007FF76BEFBA3C]\nE           \t(No symbol) [0x00007FF76BF1A19A]\nE           \t(No symbol) [0x00007FF76BF7EB96]\nE           \t(No symbol) [0x00007FF76BF9605A]\nE           \t(No symbol) [0x00007FF76BF78C33]\nE           \t(No symbol) [0x00007FF76BF4D4D6]\nE           \t(No symbol) [0x00007FF76BF4CA82]\nE           \t(No symbol) [0x00007FF76BF4D303]\nE           \t(No symbol) [0x00007FF76C04060D]\nE           \t(No symbol) [0x00007FF76C04D642]\nE           \t(No symbol) [0x00007FF76C045673]\nE           \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF76C299BDA+265882]\nE           \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C12C5B1+457041]\nE           \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C125864+429060]\nE           \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C1259B3+429395]\nE           \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C1174B6+370774]\nE           \tBaseThreadInitThunk [0x00007FFD888FE8D7+23]\nE           \tRtlUserThreadStart [0x00007FFD89B514FC+44]\n\nwebdriver\\WebDriverHelperNew.py:57: Failed"}, "steps": [{"name": "Find element Clicking Home link", "status": "failed", "statusDetails": {"message": "Failed: Message: target frame detached\n  (failed to check if window was closed: disconnected: Unable to receive message from renderer)\n  (Session info: MicrosoftEdge=135.0.3179.66)\nStacktrace:\n\tGetHandleVerifier [0x00007FF76C1BEE95+16773]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C11F160+402688]\n\t(No symbol) [0x00007FF76BF0BAB0]\n\t(No symbol) [0x00007FF76BEFCABD]\n\t(No symbol) [0x00007FF76BEFBA3C]\n\t(No symbol) [0x00007FF76BF1A19A]\n\t(No symbol) [0x00007FF76BF7EB96]\n\t(No symbol) [0x00007FF76BF9605A]\n\t(No symbol) [0x00007FF76BF78C33]\n\t(No symbol) [0x00007FF76BF4D4D6]\n\t(No symbol) [0x00007FF76BF4CA82]\n\t(No symbol) [0x00007FF76BF4D303]\n\t(No symbol) [0x00007FF76C04060D]\n\t(No symbol) [0x00007FF76C04D642]\n\t(No symbol) [0x00007FF76C045673]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF76C299BDA+265882]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C12C5B1+457041]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C125864+429060]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C1259B3+429395]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF76C1174B6+370774]\n\tBaseThreadInitThunk [0x00007FFD888FE8D7+23]\n\tRtlUserThreadStart [0x00007FFD89B514FC+44]\n\n", "trace": "  File \"C:\\Internal\\automation-framework-master\\webdriver\\WebDriverHelperNew.py\", line 152, in click_element\n    element = self.find_element('visible', 'xpath', element_xpath)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Internal\\automation-framework-master\\webdriver\\WebDriverHelperNew.py\", line 57, in find_element\n    pytest.fail(str(e))\n  File \"C:\\Internal\\automation-framework-master\\venv\\Lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "start": 1744369720188, "stop": 1744369729192}], "attachments": [{"name": "log", "source": "286cc3e5-ea71-4d8d-b656-e9e36bcd6315-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "c8134347-fb10-4b20-99f0-126ebe7bec2c-attachment.txt", "type": "text/plain"}], "start": 1744369720188, "stop": 1744369729271, "uuid": "e6d1e405-9dc3-4d71-ae5c-9c6a714a9900", "historyId": "497eb5b99ffd59f1be07ef8b22b6f9a5", "testCaseId": "497eb5b99ffd59f1be07ef8b22b6f9a5", "fullName": "testsuites.jobeze.test_home_page.TestHomePage#test_click_home_link", "labels": [{"name": "tag", "value": "Smoke"}, {"name": "feature", "value": "Jobeze Home Page Tests"}, {"name": "parentSuite", "value": "testsuites.jobeze"}, {"name": "suite", "value": "test_home_page"}, {"name": "subSuite", "value": "TestHomePage"}, {"name": "host", "value": "DESKTOP-BR6BRT3"}, {"name": "thread", "value": "18424-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testsuites.jobeze.test_home_page"}]}