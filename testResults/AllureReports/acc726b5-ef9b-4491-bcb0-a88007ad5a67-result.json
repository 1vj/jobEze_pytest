{"name": "test_post_resource", "status": "failed", "statusDetails": {"message": "AssertionError: User ID not returned in POST response\nassert None is not None", "trace": "api_setup = <utils.service_api.ServiceAPINew.ServiceAPI object at 0x00000291E33E66C0>, base_url = 'https://companydev.jobeze.com/backend'\nload_api_config = {'api_payload': {'user': {'companiesBranchList': [{'branches': [-100], 'company_id': 379}, {'branches': [-100], 'compa...'email': 'admin_two4ax326@gmail.com', 'firstName': 'testing123432', ...}}, 'order': {'product_id': 123, 'quantity': 2}}\n\n    def test_post_resource(api_setup, base_url, load_api_config):\n        \"\"\"Test the POST request to create a new user with a unique email.\"\"\"\n        payload = dict(load_api_config['api_payload']['user'])  # Clone to avoid mutation\n        payload['email'] = f\"testuser_{uuid.uuid4().hex[:6]}@example.com\"\n    \n        create_user_url = f\"{base_url}/create-user\"\n        response_post = api_setup.post_service_response(create_user_url, payload)\n        api_setup.validate_response(response_post, expected_status=200)\n    \n        response_data = response_post.json()\n        user_id = response_data.get(\"id\")\n>       assert user_id is not None, \"User ID not returned in POST response\"\nE       AssertionError: User ID not returned in POST response\nE       assert None is not None\n\ntestsuites\\api\\test_service_api.py:58: AssertionError"}, "description": "Test the POST request to create a new user with a unique email.", "steps": [{"name": "Sending POST request to API", "status": "passed", "parameters": [{"name": "api_url", "value": "'https://companydev.jobeze.com/backend/create-user'"}, {"name": "payload", "value": "{'firstName': 'testing123432', 'lastName': '', 'email': 'testuser_7dd6ef@example.com', 'password': '123456', 'user_role_id': 2, 'under_assigned_user_id': 1881, 'companiesList': [-100], 'companiesBranchList': [{'company_id': 379, 'branches': [-100]}, {'company_id': 378, 'branches': [-100]}, {'company_id': 365, 'branches': [-100]}, {'company_id': 358, 'branches': [-100]}]}"}], "start": 1746425033700, "stop": 1746425034247}, {"name": "Validating API response", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_status", "value": "200"}], "start": 1746425034247, "stop": 1746425034247}], "attachments": [{"name": "log", "source": "3bddc56b-27a4-417a-8d9f-605534216b13-attachment.txt", "type": "text/plain"}], "start": 1746425033700, "stop": 1746425034247, "uuid": "e1cc64b7-e453-4796-8546-bcec5610fe07", "historyId": "e9e3f09037df0ce29f4359b30c62871d", "testCaseId": "e9e3f09037df0ce29f4359b30c62871d", "fullName": "testsuites.api.test_service_api#test_post_resource", "labels": [{"name": "parentSuite", "value": "testsuites.api"}, {"name": "suite", "value": "test_service_api"}, {"name": "host", "value": "DESKTOP-BR6BRT3"}, {"name": "thread", "value": "18044-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testsuites.api.test_service_api"}]}